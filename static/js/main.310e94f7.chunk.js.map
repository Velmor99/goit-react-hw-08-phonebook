{"version":3,"sources":["redux/contacts/contactsActions.js","components/userMenu/userMenu.module.css","redux/auth/authOperations.js","redux/auth/authActions.js","components/navBar/navBar.module.css","redux/auth/authSelectors.js","components/userMenu/UserMenu.js","components/navBar/NavBar.js","routes.js","PrivatRoute.js","PublicRoute.js","App.js","redux/contacts/contactsReducers.js","redux/auth/authReducers.js","redux/store.js","index.js"],"names":["FILTER","addContactsRequest","createAction","addContactsSuccess","addContactsError","getContactsRequest","getContactsSuccess","getContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","changeFilter","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","user","catch","error","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","localToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","authSelectors","isAuthentificated","state","getUserName","name","connect","currentName","onLogout","authOperations","className","style","menu","menuTitle","menuButton","type","onClick","button","stylesForNavLink","display","height","textDecoration","paddingRight","paddingLeft","color","fontSize","fontWeight","fontFamily","lineHeight","activeStylesForNavLink","backgroundColor","isAuthenteficated","nav","to","exact","activeStyle","path","label","component","lazy","private","restricted","Component","routeProps","render","props","App","this","onGetCurrentUser","fallback","routes","map","route","key","itemsTestReducer","createReducer","contactsActions","action","payload","number","filter","contact","id","loading","combineReducers","items","initialUserState","email","_","authPersistConfig","storage","whitelist","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","reducer","contacts","contactsReducer","persistReducer","authReducers","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.310e94f7.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nexport const FILTER = 'contacts/filter'\r\n\r\n//экшены для асинхронной операии\r\nconst addContactsRequest = createAction('contacts/addRequest');\r\nconst addContactsSuccess = createAction('contacts/successRequest');\r\nconst addContactsError = createAction('contacts/errorRequest');\r\n\r\nconst getContactsRequest = createAction('contact/addRequest');\r\nconst getContactsSuccess = createAction('contact/successRequest');\r\nconst getContactsError = createAction('contact/errorRequest');\r\n\r\nconst removeContactsRequest = createAction('remove/addRequest');\r\nconst removeContactsSuccess = createAction('remove/successRequest');\r\nconst removeContactsError = createAction('remove/errorRequest');\r\n\r\n// const showNotifyToggle = createAction('show/notifyShow')\r\n// const showNotifyTrue = createAction('show/trueNotify')\r\n// const showNotifyFalse = createAction('show/falseNotify')\r\n/************************************************************************/ \r\n\r\n\r\nconst changeFilter = createAction(FILTER);\r\n\r\nexport default {\r\n\tremoveContactsRequest,\r\n\tremoveContactsSuccess,\r\n\tremoveContactsError,\r\n\taddContactsRequest,\r\n\taddContactsSuccess,\r\n\taddContactsError,\r\n\tgetContactsRequest,\r\n\tgetContactsSuccess,\r\n\tgetContactsError,\r\n\t// showNotifyToggle,\r\n\t// showNotifyTrue,\r\n    // showNotifyFalse,\r\n    changeFilter\r\n\t};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"userMenu_menu__1DhOA\",\"menuTitle\":\"userMenu_menuTitle__1GACw\",\"menuButton\":\"userMenu_menuButton__j259o\",\"button\":\"userMenu_button__3tkwj\"};","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/'\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data.user))\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error.message)))\r\n}\r\n\r\nconst logIn = credentials => dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    axios.post('/users/login', credentials)\r\n    .then(response => {\r\n        token.set(response.data.token)\r\n        dispatch(authActions.loginSuccess(response.data))\r\n    })\r\n    .catch(error => dispatch(authActions.loginError(error.message)))\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n    dispatch(authActions.logoutRequest())\r\n\r\n    axios.post('/users/logout')\r\n    .then(() => {\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess())\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error.message)))\r\n}\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n    const {\r\n        auth: {token: localToken},\r\n    } = getState();\r\n\r\n\r\n    if(!localToken) {\r\n        return\r\n    }\r\n\r\n    token.set(localToken);\r\n    dispatch(authActions.getCurrentUserRequest())\r\n\r\n    axios\r\n    .get('/users/current')\r\n    .then(({data}) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => authActions.getCurrentUserError(error.message))\r\n}\r\n\r\nexport default {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    getCurrentUser,\r\n}\r\n","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auts/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navBar_nav__1l1Si\",\"register\":\"navBar_register__3kVtR\"};","const isAuthentificated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst authSelectors = {\r\n    isAuthentificated, \r\n    getUserName\r\n}\r\n\r\nexport default  authSelectors ","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport authSelectors from '../../redux/auth/authSelectors';\r\nimport authOperations from '../../redux/auth/authOperations';\r\nimport style from './userMenu.module.css'\r\n\r\nconst UserMenu = ({currentName, onLogout}) => {\r\n    return (\r\n            <div className={style.menu}>\r\n                <h2 className={style.menuTitle}>Welcome, {currentName}</h2>\r\n                <div className={style.menuButton}><button type=\"button\" onClick={onLogout} className={style.button}>Logout</button></div>\r\n            </div>\r\n    )\r\n            \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    currentName: authSelectors.getUserName(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {onLogout: authOperations.logOut})(UserMenu)","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport UserMenu from '../userMenu/UserMenu';\r\nimport {connect} from 'react-redux';\r\nimport authSelectors from '../../redux/auth/authSelectors';\r\nimport style from './navBar.module.css';\r\n\r\nconst stylesForNavLink = {\r\n    display: \"block\",\r\n    height: \"44px\",\r\n    textDecoration: \"none\",\r\n    paddingRight: \"20px\",\r\n    paddingLeft: \"20px\",\r\n    color: \"#41292C\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 500,\r\n    fontFamily: \"Roboto, Verdana, sans-serif\",\r\n    lineHeight: \"44px\",\r\n};\r\n\r\nconst activeStylesForNavLink = {\r\n    backgroundColor: \"#365B42\",\r\n    color: \"#9381FF\"\r\n}\r\n\r\nconst NavBar = ({isAuthenteficated}) => {\r\n   return (\r\n       <nav className={style.nav}>\r\n           {isAuthenteficated ? (\r\n               <UserMenu></UserMenu>\r\n           ) : (\r\n               <>\r\n               <NavLink to=\"/\" exact style={stylesForNavLink} activeStyle={activeStylesForNavLink}>\r\n                   Register\r\n               </NavLink>\r\n               <NavLink to=\"/login\" exact style={stylesForNavLink} activeStyle={activeStylesForNavLink}>\r\n                   Login\r\n               </NavLink>\r\n               </>\r\n           )}\r\n       </nav>\r\n      \r\n   )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenteficated: authSelectors.isAuthentificated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(NavBar)","import {lazy} from 'react';\r\n\r\nexport default [\r\n    {\r\n        path: \"/\",\r\n        label: \"Register\",\r\n        exact: true,\r\n        component: lazy(() => import(\"./components/register/Register\")),\r\n        private: false, \r\n        restricted: true\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        label: \"Login\",\r\n        exact: true,\r\n        component: lazy(() => import(\"./components/login/login\")),\r\n        private: false, \r\n        restricted: true\r\n    },\r\n    {\r\n        path: \"/contacts\",\r\n        label: \"Contacts\",\r\n        exact: true,\r\n        component: lazy(() => import(\"./components/contacts/Contacts\")),\r\n        private: true, \r\n        restricted: false\r\n    }\r\n]","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport authSelectors from './redux/auth/authSelectors';\r\n\r\nconst PrivatRoute = ({\r\n    component: Component, \r\n    isAuthenteficated, \r\n    ...routeProps\r\n}) => (\r\n<Route \r\n{...routeProps} \r\nrender={props => \r\n     isAuthenteficated ? <Component {...props} /> : \r\n     <Redirect to=\"/login\" />\r\n  }\r\n />\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenteficated: authSelectors.isAuthentificated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivatRoute)","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport authSelectors from './redux/auth/authSelectors';\r\n\r\nconst PublicRoute = ({component: Component, isAuthenteficated, restricted, ...routeProps}) => <Route {...routeProps} render={props => \r\n    isAuthenteficated && restricted ? <Redirect to=\"/contacts\" /> : <Component {...props} /> }/>\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenteficated: authSelectors.isAuthentificated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(PublicRoute)","import React, {Component, Suspense} from 'react';\nimport {Switch} from 'react-router-dom';\nimport NavBar from './components/navBar/NavBar'\nimport {connect} from 'react-redux';\nimport authOperations from './redux/auth/authOperations';\nimport routes from './routes';\nimport PrivatRoute from './PrivatRoute';\nimport PublicRoute from './PublicRoute';\n\n\n\nclass App extends Component {\ncomponentDidMount () {\n  this.props.onGetCurrentUser();\n}\n\n  render() {\n    return (\n      <>\n        <NavBar />\n        <Suspense fallback={<h1>Loading...</h1>}>\n        <Switch>\n          {routes.map(route => {\n            return route.private ? (<PrivatRoute key={route.path} {...route} />\n              ) : (\n             <PublicRoute key={route.path} {...route} restricted={route.restricted} />)\n          })}\n        </Switch>\n        </Suspense>\n        </>\n    )\n  }\n}\n\n\nexport default connect(null, {onGetCurrentUser: authOperations.getCurrentUser})(App)","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions, {FILTER} from './contactsActions';\r\n\r\nconst itemsTestReducer = createReducer([], {\r\n\t[contactsActions.addContactsSuccess]: (state, action) => action.payload.name === '' || action.payload.number === '' ? (state) : [ ...state, action.payload],\r\n\t[contactsActions.getContactsSuccess]: (state, action) => action.payload,\r\n\t[contactsActions.removeContactsSuccess]: (state, action) => state.filter((contact) => contact.id !== action.payload)\r\n});\r\n\r\n\r\nconst filter = createReducer('', {\r\n\t[FILTER]: (state, action) => action.payload\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n\t[contactsActions.getContactsRequest]: (state, action) => true,\r\n\t[contactsActions.getContactsSuccess]: (state, action) => false,\r\n\t[contactsActions.getContactsSuccess]: (state, action) => false,\r\n\t[contactsActions.addContactsRequest]: (state, action) => true,\r\n\t[contactsActions.addContactsSuccess]: (state, action) => false,\r\n\t[contactsActions.addContactsError]: (state, action) => false,\r\n})\r\n\r\n// const emptyField = createReducer(false, {\r\n// \t[contactsActions.showNotifyTrue]: (state, action) => true,\r\n// \t[contactsActions.showNotifyFalse]: (state, action) => false,\r\n// })\r\n\r\nexport default combineReducers({\r\n\titems: itemsTestReducer,\r\n\tloading,\r\n    // emptyField,\r\n    filter,\r\n});","import {combineReducers} from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = {name: null, email: null};\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, {payload}) => payload.user,\r\n    [authActions.loginSuccess]: (_, {payload}) => payload.user,\r\n    [authActions.getCurrentUserSuccess]: (_, {payload}) => payload,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n})\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, payload) => payload.token,\r\n    [authActions.loginSuccess]: (_, {payload}) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: (_, {payload}) => payload,\r\n    [authActions.loginError]: (_, {payload}) => payload,\r\n    [authActions.logoutError]: (_, {payload}) => payload,\r\n    [authActions.getCurrentUserError]: (_, {payload}) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token, \r\n    error\r\n}) ","import contactsReducer from './contacts/contactsReducers';\r\nimport authReducers from './auth/authReducers';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n\tpersistStore,\r\n\tpersistReducer,\r\n\tFLUSH,\r\n\tREHYDRATE,\r\n\tPAUSE,\r\n\tPERSIST,\r\n\tPURGE,\r\n\tREGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\n//const defaultMiddleWare = getDefaultMiddleware()\r\n\r\n\r\nconst authPersistConfig = {\r\n\tkey: 'auth',\r\n\tstorage,\r\n\twhitelist: ['token'],\r\n}\r\n\r\n\r\n\r\n\r\nconst store = configureStore({\r\n\tmiddleware: getDefaultMiddleware({\r\n\t\tserializableCheck: {\r\n\t\t\tignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n\t\t},\r\n\t}),\r\n\treducer: {\r\n\t\tcontacts: contactsReducer,\r\n\t\tauth:persistReducer(authPersistConfig, authReducers),\r\n\t}\r\n});\r\n\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter}  from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport { persistor } from './redux/store'\nimport {PersistGate} from 'redux-persist/integration/react';\nimport './generalCss/normalize.css'\nimport './generalCss/fonts.css'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n    <BrowserRouter>\n  <App />\n  </BrowserRouter>\n    </PersistGate>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}