{"version":3,"sources":["components/contacts/ContactForm/styleContactForm.module.css","components/contacts/ContactList/list.module.css","components/contacts/Lists/lists.module.css","components/contacts/Filter/filter.module.css","redux/contacts/contactsOperations.js","components/contacts/ContactForm/ContactForm.js","redux/contacts/contactsSelectors.js","components/contacts/Lists/Listst.js","components/contacts/ContactList/ContactList.js","components/contacts/Filter/Filter.js","components/contacts/Contacts.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","addContact","name","number","dispatch","getState","localToken","auth","contactsActions","addContactsRequest","post","then","response","data","addContactsSuccess","catch","error","addContactsError","getContact","getContactsRequest","get","getContactsSuccess","getContactsError","removeContact","id","removeContactsRequest","delete","removeContactsSuccess","removeContactsError","ContactForm","state","handleChange","e","target","value","setState","preventSubmit","preventDefault","CSSTransition","in","appear","classNames","style","timeout","unmountOnExit","className","form","onSubmit","this","label","input","type","onChange","button","onClick","props","clickEvent","Component","mapDispatchToProps","contactsOperations","connect","getContacts","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","filtered","contact","toLowerCase","includes","getItemById","find","item","getShowNotify","emptyField","ownProps","contactSelector","click","key","styles","list","text","hclick","filteredArr","TransitionGroup","component","contactList","map","onChangeFilter","changeFilter","Contacts","onGetContacts"],"mappings":"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","file":"static/js/3.ae506591.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"styleContactForm_appear__2U24S\",\"appearActive\":\"styleContactForm_appearActive__2CW-F\",\"label\":\"styleContactForm_label__1UHth\",\"form\":\"styleContactForm_form__1Igog\",\"input\":\"styleContactForm_input__2r0Cw\",\"button\":\"styleContactForm_button__3xQ9g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"list_enter__2Dk3C\",\"enterActive\":\"list_enterActive__2LBly\",\"exit\":\"list_exit__3tjZU\",\"exitActive\":\"list_exitActive__18k14\",\"contactList\":\"list_contactList__32ASf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"lists_contactList__3e6XX\",\"list\":\"lists_list__7ZkrD\",\"text\":\"lists_text__17SMH\",\"delete\":\"lists_delete__1_o21\",\"enter\":\"lists_enter__1vCYs\",\"enterActive\":\"lists_enterActive__1vv28\",\"exit\":\"lists_exit__1YFpB\",\"exitActive\":\"lists_exitActive__3zGVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__2laTq\",\"form\":\"filter_form__1awZ-\",\"input\":\"filter_input__O9csF\"};","import contactsActions from './contactsActions';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n};\r\n\r\nconst addContact = (name, number) => (dispatch, getState) => {\r\n    const {\r\n        auth: {token: localToken},\r\n    } = getState();\r\n\r\n\r\n    if(!localToken) {\r\n        return\r\n    }\r\n\r\n    token.set(localToken);\r\n  dispatch(contactsActions.addContactsRequest());\r\n\r\n//   if(name === \"\" || number === \"\") {\r\n//    dispatch(contactsActions.addContactsError())\r\n//    dispatch(contactsActions.showNotifyTrue(true))\r\n//   }else {\r\n    axios.post(\"/contacts\", {name, number})\r\n    .then(response => {\r\n      token.set(response.data.token)\r\n      dispatch(contactsActions.addContactsSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(contactsActions.addContactsError(error)))\r\n//   }\r\n  \r\n};\r\n\r\nconst getContact = () => (dispatch, getState) => {\r\n    const {\r\n        auth: {token: localToken},\r\n    } = getState();\r\n\r\n\r\n    if(!localToken) {\r\n        return\r\n    }\r\n\r\n    token.set(localToken);\r\n    dispatch(contactsActions.getContactsRequest())\r\n\r\n\r\n    axios.get(\"/contacts\")\r\n    .then(response => {\r\n        dispatch(contactsActions.getContactsSuccess(response.data))\r\n    })\r\n    .catch(error => dispatch(contactsActions.getContactsError(error)))\r\n}\r\n\r\nconst removeContact = id => (dispatch, getState) => {\r\n    const {\r\n        auth: {token: localToken},\r\n    } = getState();\r\n\r\n\r\n    if(!localToken) {\r\n        return\r\n    }\r\n\r\n    token.set(localToken);\r\n    dispatch(contactsActions.removeContactsRequest());\r\n\r\n    axios.delete(`/contacts/${id}`)\r\n    .then(() => {\r\n        dispatch(contactsActions.removeContactsSuccess(id))\r\n    })\r\n    .catch(error => dispatch(contactsActions.removeContactsError(error)))\r\n}\r\n\r\n\r\nexport default {\r\n    addContact,\r\n    getContact,\r\n    removeContact,\r\n}","import React, { Component } from 'react';\r\nimport style from './styleContactForm.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../../redux/contacts/contactsOperations';\r\n\r\nclass ContactForm extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tnumber: ''\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tpreventSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<CSSTransition in={true} appear={true} classNames={style} timeout={700} unmountOnExit>\r\n\t\t\t\t<form className={style.form} onSubmit={this.preventSubmit}>\r\n\t\t\t\t\t<label className={style.label}>\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<input className={style.input} name=\"name\" type=\"text\" onChange={this.handleChange} />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label className={style.label}>\r\n\t\t\t\t\t\tNumber\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<input className={style.input} name=\"number\" type=\"text\" onChange={this.handleChange} />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={style.button}\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tonClick={() => this.props.clickEvent(this.state.name, this.state.number)}\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd to contacts\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</CSSTransition>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tclickEvent: contactsOperations.addContact\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getShowNotify = (state) => state.contacts.emptyField;\r\nconst getLoading = (state) => state.contacts.loading;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getItemById = (state, id) => {\r\n\tconst items = getContacts(state);\r\n\treturn items.find((item) => item.id === id);\r\n};\r\n\r\nconst getVisibleContacts = createSelector([ getContacts, getFilter ], (contacts, filtered) => {\r\n\treturn contacts.filter((contact) => contact.name.toLowerCase().includes(filtered.toLowerCase()));\r\n});\r\n\r\nexport default {\r\n\tgetLoading,\r\n\tgetFilter,\r\n\tgetVisibleContacts,\r\n    getItemById,\r\n    getShowNotify\r\n};\r\n","import React from 'react';\r\nimport styles from './lists.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../../redux/contacts/contactsOperations';\r\nimport contactSelector from '../../../redux/contacts/contactsSelectors';\r\n\r\nconst List = ({ id, name, number, click }) => {\r\n\treturn (\r\n\t\t<li key={id} className={styles.list}>\r\n\t\t\t<p className={styles.text}>{name}: {number}</p>\r\n\t\t\t<button className={styles.delete} onClick={click} />\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst item = contactSelector.getItemById(state, ownProps.id)\r\n\treturn {\r\n\t\t...item\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n\tclick: () => dispatch(contactsOperations.removeContact(ownProps.id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React from 'react';\r\nimport styles from './list.module.css'\r\nimport List from '../Lists/Listst'\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\nimport {connect} from 'react-redux';\r\nimport contactsActions from '../../../redux/contacts/contactsActions';\r\nimport contactSelector from '../../../redux/contacts/contactsSelectors';\r\n\r\nfunction ContactList({ filteredArr }) {\r\n\treturn (\r\n\t\t<TransitionGroup component=\"ul\" className={styles.contactList}>\r\n\t\t\t{filteredArr.map((item) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<CSSTransition key={item.id}\r\n\t\t\t\t\ttimeout={250}\r\n\t\t\t\t\tclassNames={styles}\r\n\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t>\r\n                    <List \r\n\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</TransitionGroup>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tfilteredArr: contactSelector.getVisibleContacts(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\thclick: contactsActions.removeContact\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n\r\n// export default ContactList\r\n","import React from 'react';\r\nimport styles from './filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../../redux/contacts/contactsActions';\r\nimport contactSelector from '../../../redux/contacts/contactsSelectors';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n\treturn (\r\n\t\t<form className={styles.form}>\r\n\t\t\t<label className={styles.label}>\r\n\t\t\t\tFind contacts by name\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(e) => onChangeFilter(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tonChangeFilter: contactsActions.changeFilter\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tvalue: contactSelector.getFilter(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import React, {Component} from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\n\r\nclass Contacts extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.onGetContacts()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <ContactForm />\r\n                    <Filter />\r\n                <ContactList />\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    onGetContacts: contactsOperations.getContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contacts)"],"sourceRoot":""}